plugins {
    id "com.jfrog.bintray" version "1.3.1"
}

// Used for both the 'aar' file and publish.
def VERSION_NAME = '0.4.0'
def GROUP_ID = 'is.hello'
def NAME = 'anime-android-go-99'
def DESCRIPTION = 'A small library to make animations on Android less annoying.'

// <http://stackoverflow.com/questions/29663918/android-gradle-javadoc-annotation-does-not-exists>
configurations {
    javadocDeps
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName VERSION_NAME

        testApplicationId "${GROUP_ID}.go99.tests"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:23.0.1'
    javadocDeps 'com.android.support:support-annotations:23.0.1'

    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
    options.links("http://docs.oracle.com/javase/7/docs/api/");
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourceJar
}

publishing {
    repositories {
        publications {
            mavenJava(MavenPublication) {
                groupId = GROUP_ID
                artifactId = 'anime-android-go-99'
                version = VERSION_NAME

                artifact(sourceJar)
                artifact(javadocJar)
                artifact("${project.buildDir}/outputs/aar/${project.name}-release.aar")

                // The publication doesn't know about our dependencies,
                // so we have to manually add them to the pom
                pom.withXml {
                    asNode().children().last() + {
                        resolveStrategy = DELEGATE_FIRST
                        name NAME
                        description DESCRIPTION
                        url 'https://github.com/hello/anime-android-go-99'
                        scm {
                            url 'https://github.com/hello/anime-android-go-99'
                            connection 'scm:git:git@github.com:hello/anime-android-go-99.git'
                            developerConnection 'scm:git:git@github.com:hello/anime-android-go-99.git'
                        }
                        licenses {
                            license {
                                name 'The Apache Software License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution 'repo'
                            }
                        }
                        developers {
                            developer {
                                id 'decarbonization'
                                name 'Kevin MacWhinnie'
                                email 'km@sayhello.com'
                            }
                        }
                    }

                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.each {
                        // Skip the libs rule
                        if(it.group != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty('bintrayUser')
    key = properties.getProperty('bintrayApiKey')
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = NAME
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/hello/anime-android-go-99.git'
        labels = ['android', 'animation']
        publicDownloadNumbers = false
        version {
            name = VERSION_NAME
            desc = DESCRIPTION
            vcsTag = VERSION_NAME
        }
    }
}
